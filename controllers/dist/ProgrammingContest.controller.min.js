"use strict";var ProgrammingContest=require("../models/ProgrammingContest.model");require("dotenv").config(),process.env.NODE_TLS_REJECT_UNAUTHORIZED=0;var Email=process.env.Email,Password=process.env.Password,crypto=require("crypto"),nodemailer=require("nodemailer"),transporter=nodemailer.createTransport({service:"gmail",auth:{user:Email,pass:Password}}),getPC=function(e,t){t.render("programming-contest/register.ejs",{error:e.flash("error")})},postPC=function(t,r){var e=t.body,a=e.teamname,n=e.institutename,o=e.coachname,m=e.coachcontact,i=e.coachemail,c=e.tshirtcoach,s=e.teamleadername,l=e.teamleadercontact,d=e.teamleaderemail,g=e.tshirtteamleader,h=e.member1name,u=e.member1contact,f=e.member1email,P=e.tshirtmember1,p=e.member2name,C=e.member2contact,b=e.member2email,v=e.tshirtmember2;console.log(t.body);var y=crypto.randomBytes(20).toString("hex"),T="";ProgrammingContest.findOne({teamname:a,institutename:n}).then(function(e){e?(T="Participant Team with same name and Institutes exists",t.flash("error",T),r.redirect("/ProgrammingContest/register")):new ProgrammingContest({teamname:a,institutename:n,coachname:o,coachcontact:m,coachemail:i,tshirtcoach:c,teamleadername:s,teamleadercontact:l,teamleaderemail:d,tshirtteamleader:g,member1name:h,member1contact:u,member1email:f,tshirtmember1:P,member2name:p,member2contact:C,member2email:b,tshirtmember2:v,total:300,paid:0,selected:!1,confirmCode:y}).save().then(function(){T="Participant Team has been registered successfully!!",t.flash("error",T),[{email:i,name:o},{email:d,name:s},{email:f,name:h},{email:b,name:p}].forEach(function(e){var t={to:e.email,from:Email,subject:"Registration is Successful!",text:"Hello ".concat(e.name,",\n                          You have successfully registered to programming contest as Team ").concat(a," and your confirmation code is ").concat(y)};transporter.sendMail(t,function(e,t){e?console.log(e):console.log("Sent: "+t.response)})}),r.redirect("/ProgrammingContest/register")}).catch(function(e){T="Kono error nai",console.log(e),t.flash("error",T),r.redirect("/ProgrammingContest/register")})})},getPCList=function(t,r){var a=[],e="";ProgrammingContest.find().then(function(e){a=e,r.render("programming-contest/list.ejs",{error:t.flash("error"),teams:a})}).catch(function(){e="Failed to fetch participant teams",r.render("ProgrammingContest/list.ejs",{error:t.flash("error",e),teams:a})})},deletePC=function(e,t){e.params.id;var r="";ProgrammingContest.deleteOne({_id:e.params.id}).then(function(){r="Participant Team deleted successfully!",e.flash("error",r),t.redirect("/ProgrammingContest/list")}).catch(function(){r="Failed to delete data!",e.flash("error",r),t.redirect("/ProgrammingContest/list")})},selectPC=function(t,r){var e=t.params.id;ProgrammingContest.findOne({_id:e}).then(function(e){e.selected=!0,e.save().then(function(){t.flash("error","Team has been selected succesfully!"),r.redirect("/ProgrammingContest/list")}).catch(function(){t.flash("error","Data could not be updated"),r.redirect("/ProgrammingContest/list")})}).catch(function(){t.flash("error","Data could not be updated"),r.redirect("/ProgrammingContest/list")})},paymentDonePC=function(t,r){var e=t.params.id;ProgrammingContest.findOne({_id:e}).then(function(e){e.paid=e.total,e.save().then(function(){t.flash("error","Payment completed succesfully!"),r.redirect("/ProgrammingContest/list")}).catch(function(){t.flash("error","Data could not be updated!"),r.redirect("/ProgrammingContest/list")})}).catch(function(){t.flash("error","Data could not be updated!"),r.redirect("/ProgrammingContest/list")})},getInfoPC=function(t,r){var e=t.params.id,a=[],n="";ProgrammingContest.findOne({_id:e}).then(function(e){a=e,r.render("programming-contest/edit-participant.ejs",{error:t.flash("error"),team:a})}).catch(function(e){console.log(e),n="Failed to fetch team details",r.render("programming-contest/edit-participant.ejs",{error:t.flash("error",n),team:a})})},editPC=function(t,r){var a,n,o,m,i,c,s,l,d,g,h,u,f,P,p,C,b,v,y,T,D,E,O,_;return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:a=t.params.id,n=t.body,o=n.teamname,m=n.institutename,i=n.coachname,c=n.coachcontact,s=n.coachemail,l=n.tshirtcoach,d=n.teamleadername,g=n.teamleadercontact,h=n.teamleaderemail,u=n.tshirtteamleader,f=n.member1name,P=n.member1contact,p=n.member1email,C=n.tshirtmember1,b=n.member2name,v=n.member2contact,y=n.member2email,T=n.tshirtmember2,D=n.total,E=n.paid,O=n.selected,console.log(t.body),_="",ProgrammingContest.findOneAndUpdate({_id:a},{teamname:o,institutename:m,coachname:i,coachcontact:c,coachemail:s,tshirtcoach:l,teamleadername:d,teamleadercontact:g,teamleaderemail:h,tshirtteamleader:u,member1name:f,member1contact:P,member1email:p,tshirtmember1:C,member2name:b,member2contact:v,member2email:y,tshirtmember2:T,total:D,paid:E,selected:O}).then(function(e){_="Team updated successfully!",t.flash("error",_),r.redirect("/ProgrammingContest/list")}).catch(function(e){console.log(e),_="Failed to update team details",r.redirect("/ProgrammingContest/list")});case 5:case"end":return e.stop()}})};module.exports={getPC:getPC,postPC:postPC,getPCList:getPCList,deletePC:deletePC,selectPC:selectPC,paymentDonePC:paymentDonePC,editPC:editPC,getInfoPC:getInfoPC};
//# sourceMappingURL=ProgrammingContest.controller.min.js.map
