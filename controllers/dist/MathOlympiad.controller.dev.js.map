{"version":3,"sources":["MathOlympiad.controller.js"],"names":["MathOlympiad","require","config","process","env","Email","Password","crypto","nodemailer","transporter","createTransport","service","auth","user","pass","getMO","req","res","render","error","flash","postMO","body","name","category","contact","email","institution","tshirt","console","log","registrationFee","total","paid","selected","confirmCode","randomBytes","toString","findOne","then","participant","redirect","save","options","to","from","subject","text","sendMail","err","info","response","getMOList","all_participant","find","data","participants","deleteMO","id","params","deleteOne","_id","paymentDoneMO","selectMO","getEditMO","e","editMO","findOneAndUpdate","module","exports"],"mappings":"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","sourcesContent":["const MathOlympiad = require(\"../models/MathOlympiad.model\");\r\nrequire(\"dotenv\").config();\r\nprocess.env['NODE_TLS_REJECT_UNAUTHORIZED'] = 0;\r\n\r\nconst Email = process.env.Email;\r\nconst Password = process.env.Password;\r\n\r\n\r\nconst crypto = require('crypto');\r\n\r\nconst nodemailer = require('nodemailer')\r\n\r\nconst transporter = nodemailer.createTransport({\r\n    service: 'gmail',\r\n    auth: {\r\n        user: Email,\r\n        pass: Password,\r\n    },\r\n})\r\n\r\nconst getMO = (req, res) => {\r\n    res.render(\"math-olympiad/register.ejs\", { error: req.flash(\"error\") });\r\n};\r\n\r\nconst postMO = (req, res) => {\r\n    const { name, category, contact, email, institution, tshirt } = req.body;\r\n    console.log(name);\r\n    console.log(category);\r\n    console.log(contact);\r\n    console.log(email);\r\n    console.log(institution);\r\n    console.log(tshirt);\r\n\r\n    let registrationFee = 0;\r\n    if (category == \"School\") {\r\n        registrationFee = 250;\r\n    } else if (category == \"College\") {\r\n        registrationFee = 400;\r\n    } else {\r\n        registrationFee = 500;\r\n    }\r\n\r\n    const total = registrationFee;\r\n    const paid = 0;\r\n    const selected = false;\r\n    const confirmCode = crypto.randomBytes(20).toString('hex');\r\n\r\n    let error = \"\";\r\n\r\n    //if name & contact differs, only then we will store to database\r\n    MathOlympiad.findOne({ name: name, contact: contact }).then((participant) => {\r\n        if (participant) {\r\n            error = \"Participant with same name and contact exists\";\r\n            req.flash(\"error\", error);\r\n            res.redirect(\"/MathOlympiad/register\");\r\n        } else {\r\n            const participant = new MathOlympiad({\r\n                name,\r\n                category,\r\n                contact,\r\n                email,\r\n                institution,\r\n                paid,\r\n                total,\r\n                selected,\r\n                confirmCode,\r\n                tshirt,\r\n            });\r\n            participant\r\n                .save()\r\n                .then(() => {\r\n                    error = \"Participant has been registered successfully!!\";\r\n                    req.flash(\"error\", error);\r\n\r\n                    const options = {\r\n                        to: email,\r\n                        from: Email,\r\n                        subject: 'Registration is Successful!',\r\n                        text: `Hello ${name},\r\n                        You have successfully registered to ${category} category and your confirmation code is ${confirmCode}`,\r\n                    }\r\n\r\n                    transporter.sendMail(options, function (err, info) {\r\n                        if (err) {\r\n                            console.log(err)\r\n                            return\r\n                        }\r\n                        console.log('Sent: ' + info.response)\r\n                    })\r\n\r\n\r\n                    res.redirect(\"/MathOlympiad/register\");\r\n                })\r\n                .catch(() => {\r\n                    error = \"Unexpected error\";\r\n                    req.flash(\"error\", error);\r\n                    res.redirect(\"/MathOlympiad/register\");\r\n                });\r\n        }\r\n    });\r\n\r\n    // res.render(\"math-olympiad/register.ejs\");\r\n};\r\n\r\nconst getMOList = (req, res) => {\r\n\r\n    let all_participant = [];\r\n    let error = \"\";\r\n    MathOlympiad.find().then((data) => {\r\n        all_participant = data\r\n        res.render('math-olympiad/list.ejs', {\r\n            error: req.flash('error'),\r\n            participants: all_participant,\r\n        });\r\n\r\n    }).catch(() => {\r\n        error = \"Failed to fetch data!\"\r\n        res.render('math-olympiad/list.ejs', {\r\n            error: req.flash('error', error),\r\n            participants: all_participant,\r\n        });\r\n    });\r\n};\r\n\r\nconst deleteMO = (req, res) => {\r\n    const id = req.params.id;\r\n    //console.log(id);\r\n    MathOlympiad.deleteOne({ _id: req.params.id }).then(() => {\r\n        let error = 'Data has been deleted successfully!';\r\n        req.flash('error', error);\r\n        res.redirect('/MathOlympiad/list');\r\n    })\r\n        .catch(() => {\r\n            let error = 'Failed to delete data!';\r\n            req.flash('error', error);\r\n            res.redirect('/MathOlympiad/list');\r\n        });\r\n};\r\n\r\nconst paymentDoneMO = (req, res) => {\r\n    const id = req.params.id;\r\n\r\n    MathOlympiad.findOne({ _id: id })\r\n        .then((participant) => {\r\n            participant.paid = participant.total;\r\n            participant\r\n                .save()\r\n                .then(() => {\r\n                    let error = \"Payment completed succesfully!\";\r\n                    req.flash(\"error\", error);\r\n                    res.redirect(\"/MathOlympiad/list\");\r\n                })\r\n                .catch(() => {\r\n                    let error = \"Data could not be updated!\";\r\n                    req.flash(\"error\", error);\r\n                    res.redirect(\"/MathOlympiad/list\");\r\n                });\r\n        })\r\n        .catch(() => {\r\n            let error = \"Data could not be updated\";\r\n            req.flash(\"error\", error);\r\n            res.redirect(\"/MathOlympiad/list\");\r\n        });\r\n};\r\n\r\nconst selectMO = (req, res) => {\r\n    const id = req.params.id;\r\n\r\n    MathOlympiad.findOne({ _id: id })\r\n        .then((participant) => {\r\n            participant.selected = true;\r\n            participant\r\n                .save()\r\n                .then(() => {\r\n                    let error = \"Participant has been selected succesfully!\";\r\n                    req.flash(\"error\", error);\r\n                    res.redirect(\"/MathOlympiad/list\");\r\n                })\r\n                .catch(() => {\r\n                    let error = \"Data could not be updated!\";\r\n                    req.flash(\"error\", error);\r\n                    res.redirect(\"/MathOlympiad/list\");\r\n                });\r\n        })\r\n        .catch(() => {\r\n            let error = \"Data could not be updated!\";\r\n            req.flash(\"error\", error);\r\n            res.redirect(\"/MathOlympiad/list\");\r\n        });\r\n};\r\n\r\nconst getEditMO = (req, res) => {\r\n    const id = req.params.id;\r\n\r\n    let info = [];\r\n    let error = \"\";\r\n    MathOlympiad.findOne({ _id: id })\r\n        .then((data) => {\r\n            info = data;\r\n            res.render(\"math-olympiad/edit-participant.ejs\", {\r\n                error: req.flash(\"error\"),\r\n                participant: info,\r\n            });\r\n        })\r\n        .catch((e) => {\r\n            console.log(e);\r\n            error = \"Participant details could not be fetched!\";\r\n            res.render(\"math-olympiad/editParticipant.ejs\", {\r\n                error: req.flash(\"error\", error),\r\n                participant: info,\r\n            });\r\n        });\r\n};\r\n\r\nconst editMO = async (req, res) => {\r\n    const id = req.params.id;\r\n    const { name, category, contact, email, institution, tshirt } = req.body;\r\n    //console.log(req.body);\r\n\r\n    let error = \"\";\r\n\r\n    MathOlympiad.findOneAndUpdate(\r\n        { _id: id },\r\n        { name, category, contact, email, institution, tshirt })\r\n        .then((data) => {\r\n            error = \"Update infromation successful!\";\r\n            req.flash(\"error\", error);\r\n            res.redirect(\"/MathOlympiad/list\");\r\n        })\r\n        .catch((e) => {\r\n            console.log(e);\r\n            error = \"Update information failed!\";\r\n            res.redirect(\"/MathOlympiad/list\");\r\n        });\r\n};\r\n\r\nmodule.exports = { getMO, postMO, getMOList, deleteMO, paymentDoneMO, selectMO, editMO, getEditMO };"],"file":"MathOlympiad.controller.dev.js"}