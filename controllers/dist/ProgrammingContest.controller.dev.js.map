{"version":3,"sources":["ProgrammingContest.controller.js"],"names":["ProgrammingContest","require","config","process","env","Email","Password","crypto","nodemailer","transporter","createTransport","service","auth","user","pass","getPC","req","res","render","error","flash","postPC","body","teamname","institutename","coachname","coachcontact","coachemail","tshirtcoach","teamleadername","teamleadercontact","teamleaderemail","tshirtteamleader","member1name","member1contact","member1email","tshirtmember1","member2name","member2contact","member2email","tshirtmember2","console","log","total","paid","selected","confirmCode","randomBytes","toString","findOne","then","participantteam","redirect","team","save","allEmail","email","name","forEach","options","to","from","subject","text","sendMail","err","response","getPCList","participant_teams","find","data","teams","deletePC","id","params","deleteOne","_id","selectPC","paymentDonePC","getInfoPC","info","e","editPC","findOneAndUpdate","module","exports"],"mappings":"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","sourcesContent":["const ProgrammingContest = require(\"../models/ProgrammingContest.model\");\r\n\r\nrequire(\"dotenv\").config();\r\nprocess.env['NODE_TLS_REJECT_UNAUTHORIZED'] = 0;\r\n\r\nconst Email = process.env.Email;\r\nconst Password = process.env.Password;\r\n\r\n\r\nconst crypto = require('crypto');\r\n\r\nconst nodemailer = require('nodemailer')\r\n\r\nconst transporter = nodemailer.createTransport({\r\n    service: 'gmail',\r\n    auth: {\r\n        user: Email,\r\n        pass: Password,\r\n    },\r\n})\r\n\r\nconst getPC = (req, res) => {\r\n    res.render(\"programming-contest/register.ejs\", { error: req.flash(\"error\") });\r\n};\r\n\r\nconst postPC = (req, res) => {\r\n    const { teamname, institutename, coachname, coachcontact, coachemail, tshirtcoach, teamleadername, teamleadercontact, teamleaderemail, tshirtteamleader, member1name, member1contact, member1email, tshirtmember1, member2name, member2contact, member2email, tshirtmember2 } = req.body;\r\n\r\n    console.log(req.body);\r\n\r\n\r\n\r\n\r\n    const total = 300;\r\n    const paid = 0;\r\n    const selected = false;\r\n    const confirmCode = crypto.randomBytes(20).toString('hex')\r\n\r\n    let error = \"\";\r\n\r\n    //if name & contact differs, only then we will store to database\r\n    ProgrammingContest.findOne({ teamname: teamname, institutename: institutename }).then((participantteam) => {\r\n        if (participantteam) {\r\n            error = \"Participant Team with same name and Institutes exists\";\r\n            req.flash(\"error\", error);\r\n            res.redirect(\"/ProgrammingContest/register\");\r\n        } else {\r\n            const team = new ProgrammingContest({\r\n                teamname: teamname,\r\n                institutename: institutename,\r\n                coachname: coachname,\r\n                coachcontact: coachcontact,\r\n                coachemail: coachemail,\r\n                tshirtcoach: tshirtcoach,\r\n                teamleadername: teamleadername,\r\n                teamleadercontact: teamleadercontact,\r\n                teamleaderemail: teamleaderemail,\r\n                tshirtteamleader: tshirtteamleader,\r\n                member1name: member1name,\r\n                member1contact: member1contact,\r\n                member1email: member1email,\r\n                tshirtmember1: tshirtmember1,\r\n                member2name: member2name,\r\n                member2contact: member2contact,\r\n                member2email: member2email,\r\n                tshirtmember2: tshirtmember2,\r\n                total: total,\r\n                paid: paid,\r\n                selected: selected,\r\n                confirmCode: confirmCode,\r\n            });\r\n            team\r\n                .save()\r\n                .then(() => {\r\n                    error = \"Participant Team has been registered successfully!!\";\r\n                    req.flash(\"error\", error);\r\n\r\n                    const allEmail = [\r\n                        { email: coachemail, name: coachname },\r\n                        { email: teamleaderemail, name: teamleadername },\r\n                        { email: member1email, name: member1name },\r\n                        { email: member2email, name: member2name },\r\n                    ]\r\n\r\n                    allEmail.forEach((team) => {\r\n                        const options = {\r\n                            to: team.email,\r\n                            from: Email,\r\n                            subject: 'Registration is Successful!',\r\n                            text: `Hello ${team.name},\r\n                          You have successfully registered to programming contest as Team ${teamname} and your confirmation code is ${confirmCode}`,\r\n                        }\r\n\r\n                        transporter.sendMail(options, function (err, res) {\r\n                            if (err) {\r\n                                console.log(err)\r\n                                return\r\n                            }\r\n                            console.log('Sent: ' + res.response)\r\n                        })\r\n                    })\r\n\r\n                    res.redirect(\"/ProgrammingContest/register\");\r\n                })\r\n                .catch((err) => {\r\n                    error = \"Kono error nai\";\r\n                    console.log(err)\r\n                    req.flash(\"error\", error);\r\n                    res.redirect(\"/ProgrammingContest/register\");\r\n                });\r\n        }\r\n    });\r\n};\r\n\r\nconst getPCList = (req, res) => {\r\n    let participant_teams = [];\r\n    let error = \"\";\r\n    ProgrammingContest.find()\r\n        .then((data) => {\r\n            participant_teams = data;\r\n            res.render(\"programming-contest/list.ejs\", {\r\n                error: req.flash(\"error\"),\r\n                teams: participant_teams,\r\n            });\r\n        })\r\n        .catch(() => {\r\n            error = \"Failed to fetch participant teams\";\r\n            res.render(\"ProgrammingContest/list.ejs\", {\r\n                error: req.flash(\"error\", error),\r\n                teams: participant_teams,\r\n            });\r\n        });\r\n};\r\n\r\nconst deletePC = (req, res) => {\r\n    const id = req.params.id;\r\n    //console.log(id);\r\n\r\n    let error = \"\";\r\n    ProgrammingContest.deleteOne({ _id: req.params.id })\r\n        .then(() => {\r\n            error = \"Participant Team deleted successfully!\";\r\n            req.flash(\"error\", error);\r\n            res.redirect(\"/ProgrammingContest/list\");\r\n        })\r\n        .catch(() => {\r\n            error = \"Failed to delete data!\";\r\n            req.flash(\"error\", error);\r\n            res.redirect(\"/ProgrammingContest/list\");\r\n        });\r\n};\r\n\r\nconst selectPC = (req, res) => {\r\n    const id = req.params.id;\r\n\r\n    ProgrammingContest.findOne({ _id: id })\r\n        .then((team) => {\r\n            team.selected = true;\r\n            team\r\n                .save()\r\n                .then(() => {\r\n                    let error = \"Team has been selected succesfully!\";\r\n                    req.flash(\"error\", error);\r\n                    res.redirect(\"/ProgrammingContest/list\");\r\n                })\r\n                .catch(() => {\r\n                    let error = \"Data could not be updated\";\r\n                    req.flash(\"error\", error);\r\n                    res.redirect(\"/ProgrammingContest/list\");\r\n                });\r\n        })\r\n        .catch(() => {\r\n            let error = \"Data could not be updated\";\r\n            req.flash(\"error\", error);\r\n            res.redirect(\"/ProgrammingContest/list\");\r\n        });\r\n};\r\n\r\nconst paymentDonePC = (req, res) => {\r\n    const id = req.params.id;\r\n\r\n    ProgrammingContest.findOne({ _id: id })\r\n        .then((team) => {\r\n            team.paid = team.total;\r\n            team\r\n                .save()\r\n                .then(() => {\r\n                    let error = \"Payment completed succesfully!\";\r\n                    req.flash(\"error\", error);\r\n                    res.redirect(\"/ProgrammingContest/list\");\r\n                })\r\n                .catch(() => {\r\n                    let error = \"Data could not be updated!\";\r\n                    req.flash(\"error\", error);\r\n                    res.redirect(\"/ProgrammingContest/list\");\r\n                });\r\n        })\r\n        .catch(() => {\r\n            let error = \"Data could not be updated!\";\r\n            req.flash(\"error\", error);\r\n            res.redirect(\"/ProgrammingContest/list\");\r\n        });\r\n};\r\n\r\nconst getInfoPC = (req, res) => {\r\n    const id = req.params.id;\r\n\r\n    let info = [];\r\n    let error = \"\";\r\n    ProgrammingContest.findOne({ _id: id })\r\n        .then((data) => {\r\n            info = data;\r\n            res.render(\"programming-contest/edit-participant.ejs\", {\r\n                error: req.flash(\"error\"),\r\n                team: info,\r\n            });\r\n        })\r\n        .catch((e) => {\r\n            console.log(e);\r\n            error = \"Failed to fetch team details\";\r\n            res.render(\"programming-contest/edit-participant.ejs\", {\r\n                error: req.flash(\"error\", error),\r\n                team: info,\r\n            });\r\n        });\r\n};\r\n\r\nconst editPC = async (req, res) => {\r\n    const id = req.params.id;\r\n    const { teamname, institutename, coachname, coachcontact, coachemail, tshirtcoach, teamleadername, teamleadercontact, teamleaderemail, tshirtteamleader, member1name, member1contact, member1email, tshirtmember1, member2name, member2contact, member2email, tshirtmember2, total, paid, selected } = req.body;\r\n    console.log(req.body);\r\n\r\n    let error = \"\";\r\n\r\n    ProgrammingContest.findOneAndUpdate(\r\n        { _id: id },\r\n        { teamname, institutename, coachname, coachcontact, coachemail, tshirtcoach, teamleadername, teamleadercontact, teamleaderemail, tshirtteamleader, member1name, member1contact, member1email, tshirtmember1, member2name, member2contact, member2email, tshirtmember2, total, paid, selected })\r\n        .then((data) => {\r\n            error = \"Team updated successfully!\";\r\n            req.flash(\"error\", error);\r\n            res.redirect(\"/ProgrammingContest/list\");\r\n        })\r\n        .catch((e) => {\r\n            console.log(e);\r\n            error = \"Failed to update team details\";\r\n            res.redirect(\"/ProgrammingContest/list\");\r\n        });\r\n};\r\n\r\nmodule.exports = { getPC, postPC, getPCList, deletePC, selectPC, paymentDonePC, editPC, getInfoPC };\r\n"],"file":"ProgrammingContest.controller.dev.js"}