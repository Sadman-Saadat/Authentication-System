"use strict";var MathOlympiad=require("../models/MathOlympiad.model");require("dotenv").config(),process.env.NODE_TLS_REJECT_UNAUTHORIZED=0;var Email=process.env.Email,Password=process.env.Password,crypto=require("crypto"),nodemailer=require("nodemailer"),transporter=nodemailer.createTransport({service:"gmail",auth:{user:Email,pass:Password}}),getMO=function(e,t){t.render("math-olympiad/register.ejs",{error:e.flash("error")})},postMO=function(t,a){var e=t.body,r=e.name,i=e.category,n=e.contact,o=e.email,c=e.institution,s=e.tshirt;console.log(r),console.log(i),console.log(n),console.log(o),console.log(c),console.log(s);var l="School"==i?250:"College"==i?400:500,d=crypto.randomBytes(20).toString("hex"),p="";MathOlympiad.findOne({name:r,contact:n}).then(function(e){e?(p="Participant with same name and contact exists",t.flash("error",p),a.redirect("/MathOlympiad/register")):new MathOlympiad({name:r,category:i,contact:n,email:o,institution:c,paid:0,total:l,selected:!1,confirmCode:d,tshirt:s}).save().then(function(){p="Participant has been registered successfully!!",t.flash("error",p);var e={to:o,from:Email,subject:"Registration is Successful!",text:"Hello ".concat(r,",\n                        You have successfully registered to ").concat(i," category and your confirmation code is ").concat(d)};transporter.sendMail(e,function(e,t){e?console.log(e):console.log("Sent: "+t.response)}),a.redirect("/MathOlympiad/register")}).catch(function(){p="Unexpected error",t.flash("error",p),a.redirect("/MathOlympiad/register")})})},getMOList=function(t,a){var r=[],e="";MathOlympiad.find().then(function(e){r=e,a.render("math-olympiad/list.ejs",{error:t.flash("error"),participants:r})}).catch(function(){e="Failed to fetch data!",a.render("math-olympiad/list.ejs",{error:t.flash("error",e),participants:r})})},deleteMO=function(e,t){e.params.id;MathOlympiad.deleteOne({_id:e.params.id}).then(function(){e.flash("error","Data has been deleted successfully!"),t.redirect("/MathOlympiad/list")}).catch(function(){e.flash("error","Failed to delete data!"),t.redirect("/MathOlympiad/list")})},paymentDoneMO=function(t,a){var e=t.params.id;MathOlympiad.findOne({_id:e}).then(function(e){e.paid=e.total,e.save().then(function(){t.flash("error","Payment completed succesfully!"),a.redirect("/MathOlympiad/list")}).catch(function(){t.flash("error","Data could not be updated!"),a.redirect("/MathOlympiad/list")})}).catch(function(){t.flash("error","Data could not be updated"),a.redirect("/MathOlympiad/list")})},selectMO=function(t,a){var e=t.params.id;MathOlympiad.findOne({_id:e}).then(function(e){e.selected=!0,e.save().then(function(){t.flash("error","Participant has been selected succesfully!"),a.redirect("/MathOlympiad/list")}).catch(function(){t.flash("error","Data could not be updated!"),a.redirect("/MathOlympiad/list")})}).catch(function(){t.flash("error","Data could not be updated!"),a.redirect("/MathOlympiad/list")})},getEditMO=function(t,a){var e=t.params.id,r=[],i="";MathOlympiad.findOne({_id:e}).then(function(e){r=e,a.render("math-olympiad/edit-participant.ejs",{error:t.flash("error"),participant:r})}).catch(function(e){console.log(e),i="Participant details could not be fetched!",a.render("math-olympiad/editParticipant.ejs",{error:t.flash("error",i),participant:r})})},editMO=function(t,a){var r,i,n,o,c,s,l,d,p;return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:r=t.params.id,i=t.body,n=i.name,o=i.category,c=i.contact,s=i.email,l=i.institution,d=i.tshirt,p="",MathOlympiad.findOneAndUpdate({_id:r},{name:n,category:o,contact:c,email:s,institution:l,tshirt:d}).then(function(e){p="Update infromation successful!",t.flash("error",p),a.redirect("/MathOlympiad/list")}).catch(function(e){console.log(e),p="Update information failed!",a.redirect("/MathOlympiad/list")});case 4:case"end":return e.stop()}})};module.exports={getMO:getMO,postMO:postMO,getMOList:getMOList,deleteMO:deleteMO,paymentDoneMO:paymentDoneMO,selectMO:selectMO,editMO:editMO,getEditMO:getEditMO};
//# sourceMappingURL=MathOlympiad.controller.min.js.map
